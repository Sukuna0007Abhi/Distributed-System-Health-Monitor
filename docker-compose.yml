version: '3.8'

services:
  # Redis for CoRIM storage and general caching
  redis:
    image: redis:7-alpine
    container_name: health-monitor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - health-monitor-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # NATS for event streaming
  nats:
    image: nats:2.10-alpine
    container_name: health-monitor-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command: 
      - "--jetstream"
      - "--store_dir=/data"
      - "--max_memory_store=1GB"
      - "--max_file_store=10GB"
    volumes:
      - nats_data:/data
    networks:
      - health-monitor-net

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: health-monitor-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - health-monitor-net

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: health-monitor-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: healthmonitor123
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - health-monitor-net
    depends_on:
      - prometheus

  # Health Monitor Application
  health-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: health-monitor-app
    restart: unless-stopped
    ports:
      - "8080:8080"    # HTTP API
      - "8443:8443"    # HTTPS API
      - "9091:9090"    # Metrics endpoint
    environment:
      - CONFIG_PATH=/configs/config.yaml
      - REDIS_ADDR=redis:6379
      - NATS_URL=nats://nats:4222
      - LOG_LEVEL=info
    volumes:
      - ./config-with-corim.yaml:/configs/config.yaml
      - ./configs/corim-profiles:/configs/corim-profiles
      - health_monitor_logs:/var/log/health-monitor
    networks:
      - health-monitor-net
    depends_on:
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD", "/health-monitor", "health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: health-monitor-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployments/nginx.conf:/etc/nginx/nginx.conf
      - ./deployments/ssl:/etc/nginx/ssl
    networks:
      - health-monitor-net
    depends_on:
      - health-monitor

volumes:
  redis_data:
    driver: local
  nats_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  health_monitor_logs:
    driver: local

networks:
  health-monitor-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16