apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: health-monitor
  labels:
    app: nats
spec:
  serviceName: nats
  replicas: 3
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: nats
        image: nats:2.10-alpine
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 8222
          name: monitoring
        - containerPort: 6222
          name: cluster
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
        - nats-server
        - --config
        - /etc/nats/nats.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: monitoring
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats
        - name: nats-tmp
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: nats-config
      - name: nats-tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: health-monitor
  labels:
    app: nats
spec:
  selector:
    app: nats
  ports:
  - port: 4222
    targetPort: client
    protocol: TCP
    name: client
  - port: 8222
    targetPort: monitoring
    protocol: TCP
    name: monitoring
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nats-cluster
  namespace: health-monitor
  labels:
    app: nats
spec:
  clusterIP: None
  selector:
    app: nats
  ports:
  - port: 6222
    targetPort: cluster
    protocol: TCP
    name: cluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: health-monitor
data:
  nats.conf: |
    # NATS Server Configuration
    
    # Client port
    port: 4222
    
    # HTTP monitoring port
    http_port: 8222
    
    # Clustering
    cluster {
      name: health-monitor-cluster
      port: 6222
      
      routes = [
        nats://nats-0.nats.health-monitor.svc.cluster.local:6222
        nats://nats-1.nats.health-monitor.svc.cluster.local:6222
        nats://nats-2.nats.health-monitor.svc.cluster.local:6222
      ]
      
      cluster_advertise: $CLUSTER_ADVERTISE
      connect_retries: 30
    }
    
    # Jetstream for persistence
    jetstream {
      store_dir: /tmp/nats/jetstream
      max_memory_store: 64MB
      max_file_store: 1GB
    }
    
    # Logging
    log_time: true
    debug: false
    trace: false
    
    # Limits
    max_connections: 64K
    max_subscriptions: 0
    max_payload: 1MB
    
    # Security
    authorization {
      default_permissions = {
        publish = {
          allow: ["attestation.>", "health.>", "metrics.>"]
        }
        subscribe = {
          allow: ["attestation.>", "health.>", "metrics.>", "_INBOX.>"]
        }
      }
    }