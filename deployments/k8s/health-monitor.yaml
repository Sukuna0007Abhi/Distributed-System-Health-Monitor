apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-monitor
  namespace: health-monitor
  labels:
    app: health-monitor
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: health-monitor
  template:
    metadata:
      labels:
        app: health-monitor
        version: v1
    spec:
      serviceAccountName: health-monitor
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: health-monitor
        image: health-monitor:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: metrics
        env:
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: NATS_URL
          value: "nats://nats:4222"
        - name: LOG_LEVEL
          value: "info"
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: health-monitor-config
---
apiVersion: v1
kind: Service
metadata:
  name: health-monitor-service
  namespace: health-monitor
  labels:
    app: health-monitor
spec:
  selector:
    app: health-monitor
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 8081
    targetPort: metrics
    protocol: TCP
    name: metrics
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: health-monitor-config
  namespace: health-monitor
data:
  config.yaml: |
    server:
      port: 8080
      read_timeout: 30s
      write_timeout: 30s
      idle_timeout: 60s
    
    redis:
      url: "redis://redis:6379"
      pool_size: 10
      min_idle_conns: 5
      dial_timeout: 5s
      read_timeout: 3s
      write_timeout: 3s
      pool_timeout: 4s
    
    nats:
      url: "nats://nats:4222"
      max_reconnects: 5
      reconnect_wait: 2s
    
    metrics:
      enabled: true
      port: 8081
      path: "/metrics"
    
    corim:
      storage:
        type: "redis"
        ttl: "24h"
      validation:
        strict_mode: true
        max_profile_size: "50MB"
        allowed_mime_types:
          - "application/corim+cbor"
          - "application/json"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: health-monitor
  namespace: health-monitor
automountServiceAccountToken: false
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: health-monitor-netpol
  namespace: health-monitor
spec:
  podSelector:
    matchLabels:
      app: health-monitor
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-system
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 8081
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: nats
    ports:
    - protocol: TCP
      port: 4222
  - to: []  # Allow DNS
    ports:
    - protocol: UDP
      port: 53